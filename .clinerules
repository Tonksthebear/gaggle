# Project Guidelines

## Documentation Requirements

- Maintain changelog entries in CHANGELOG.md

## Architecture Decision Records

Create ADRs in /docs/adr for:

- Major dependency changes
- Architectural pattern changes
- New integration patterns
- Database schema changes

Follow template in /docs/adr/template.md

## Code Style & Patterns

- Ruby on Rails with controllers following only standard CRUD routes (index, show, new, create, edit, update, destroy)
- Shallow nesting of resources (index, new, create routes are nested in the parent, others are unnested and belong to the resource itself)
- Prefer composition over inheritance
- StimulusJS, TailwindCSS, and Turbo.js are all used on the front end
- Tailwind CSS is used for styling the welcome page in `Overviews#show`.
- Turbo streams are used for live updating of web pages

## Session Management

- Gaggle::Session manages the running executables.
- The Gaggle::Session model was removed from autoload to prevent class variable resets on file saves.
- Full session management is implemented, including starting, viewing, messaging, and stopping sessions.
- Gaggle::Notification model now belongs_to :messageable, polymorphic: true, and :message.

## Testing Standards

- Tests are minitest
- Controller and model tests necessary when adding or editing either
- System test required for each critical user flow
- All tests use fixtures

## Rails Tasks

- Rails tasks are used for external interaction with the Gaggle engine.
- Tasks are defined in `lib/tasks/gaggle_tasks.rake`.
- Each task should have a clear description.
- Tasks that require parameters should explicitly define them using the `[:param1, :param2]` syntax.
- Tasks should handle missing or invalid parameters gracefully and provide informative error messages.
- Use `argument.blank?` instead of `argument.nil? || argument.empty?` when checking for argument presence.

# Security

## Sensitive Files

DO NOT read or modify:

- .env files
- \*_/config/secrets._
- \*_/_.pem
- Any file containing API keys, tokens, or credentials

## Security Practices

- Never commit sensitive files
- Use environment variables for secrets
- Keep credentials out of logs and output
