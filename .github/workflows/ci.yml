name: CI

# Trigger the workflow on push or pull request to main/master branches
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

# Define jobs to run
jobs:
  test:
    name: Run Minitest Suite
    runs-on: ubuntu-latest

    # Set up services (e.g., SQLite for in-memory DB)
    services:
      sqlite:
        image: sqlite:latest
        ports:
          - 5432:5432

    # Environment variables for the test run
    env:
      RAILS_ENV: test
      BUNDLE_PATH: vendor/bundle

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Ruby (match your gem's Ruby version, e.g., 3.2.2 from your logs)
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2 # Adjust to your project's Ruby version
          bundler-cache: true # Cache gems for faster runs

      # Install SQLite dependencies (if needed)
      - name: Install SQLite
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

      # Set up the test database (for an in-memory SQLite DB)
      - name: Set up test database
        run: |
          bundle exec rails db:prepare
        env:
          DATABASE_URL: sqlite3::memory:

      # Run the Minitest suite
      - name: Run tests
        run: bundle exec rails test

      # Optional: Upload test artifacts (e.g., logs) if tests fail
      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: log/test.log